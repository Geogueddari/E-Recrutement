@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item ">
        <a id="manage" class="nav-link text-dark d-flex align-items-center" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">
            <div class="user-avatar rounded-circle d-flex align-items-center justify-content-center me-2" 
                 style="background-color: #007bff; width: 50px; height: 50px;">
                @UserManager.GetUserName(User)?[0].ToString().ToUpper()
            </div>
        </a>
    </li>
    <li class="nav-item">
        <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button id="logout" type="submit" class="btn rounded-circle border-0 d-flex align-items-center justify-content-center text-white" style="background-color: #dc3545; width: 50px; height: 50px;">
                    <i class="bi bi-box-arrow-right fs-4"></i>
                </button>


        </form>
    </li>
}
else
{
    <li class="nav-item">
            <a class="btn btn-success me-2 text-uppercase" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="btn btn-primary text-uppercase" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
